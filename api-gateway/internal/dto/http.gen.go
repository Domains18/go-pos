// Package dto provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package dto

const (
	BearerAuthScopes  = "BearerAuth.Scopes"
	BearerTokenScopes = "BearerToken.Scopes"
)

// Customer defines model for Customer.
type Customer struct {
	ID       *string `json:"ID,omitempty"`
	Email    *string `json:"email"`
	MobileNo *string `json:"mobile_no,omitempty"`
	Name     *string `json:"name,omitempty"`
}

// CustomerPaginator defines model for CustomerPaginator.
type CustomerPaginator struct {
	Data  *[]Customer      `json:"data,omitempty"`
	Links *PaginationLinks `json:"links,omitempty"`
	Meta  *PaginationMeta  `json:"meta,omitempty"`
}

// Message defines model for Message.
type Message struct {
	Code    *string `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
}

// PaginationLinks defines model for PaginationLinks.
type PaginationLinks struct {
	First *string `json:"first,omitempty"`
	Last  *string `json:"last,omitempty"`
	Next  *string `json:"next"`
	Prev  *string `json:"prev"`
}

// PaginationMeta defines model for PaginationMeta.
type PaginationMeta struct {
	CurrentPage *float32 `json:"current_page,omitempty"`
	From        *float32 `json:"from,omitempty"`
	LastPage    *float32 `json:"last_page,omitempty"`
	Path        *string  `json:"path,omitempty"`
	PerPage     *float32 `json:"per_page,omitempty"`
	To          *float32 `json:"to,omitempty"`
	Total       *float32 `json:"total,omitempty"`
}

// Product defines model for Product.
type Product struct {
	Available       *bool         `json:"available,omitempty"`
	Image           *string       `json:"image,omitempty"`
	Name            *string       `json:"name,omitempty"`
	Price           *float32      `json:"price,omitempty"`
	ProductCategory *ProductGroup `json:"product_category,omitempty"`
	Quantity        *float32      `json:"quantity,omitempty"`
	SalePrice       *float32      `json:"sale_price,omitempty"`
	Sku             *string       `json:"sku,omitempty"`
	TaxRate         *float32      `json:"tax_rate,omitempty"`
	TaxedPrice      *float32      `json:"taxed_price,omitempty"`
	TaxedSalePrice  *float32      `json:"taxed_sale_price,omitempty"`
}

// ProductGroup defines model for ProductGroup.
type ProductGroup struct {
	Disabled *bool    `json:"disabled,omitempty"`
	Id       *float32 `json:"id,omitempty"`
	IsGroup  *bool    `json:"is_group,omitempty"`
	Name     *string  `json:"name,omitempty"`
	Parent   *float32 `json:"parent,omitempty"`
}

// ProductPaginator defines model for ProductPaginator.
type ProductPaginator struct {
	Data  *[]Product       `json:"data,omitempty"`
	Links *PaginationLinks `json:"links,omitempty"`
	Meta  *PaginationMeta  `json:"meta,omitempty"`
}

// SalesInvoice defines model for SalesInvoice.
type SalesInvoice struct {
	ClientId *float32            `json:"client_id,omitempty"`
	Customer *Customer           `json:"customer,omitempty"`
	Items    *[]SalesInvoiceItem `json:"items,omitempty"`
}

// SalesInvoiceItem defines model for SalesInvoiceItem.
type SalesInvoiceItem struct {
	Product           *Product `json:"product,omitempty"`
	Quantity          *float32 `json:"quantity,omitempty"`
	SellingPrice      *float32 `json:"selling_price,omitempty"`
	TaxedSellingPrice *float32 `json:"taxed_selling_price,omitempty"`
}

// Token defines model for Token.
type Token struct {
	DisplayName *string `json:"display_name,omitempty"`

	// Expire Timestamp when token expires
	Expire *int    `json:"expire,omitempty"`
	Token  *string `json:"token,omitempty"`
	User   *string `json:"user,omitempty"`
}

// User defines model for User.
type User struct {
	Password *string `json:"password,omitempty"`
	Username *string `json:"username,omitempty"`
}

// GetCustomersParams defines parameters for GetCustomers.
type GetCustomersParams struct {
	// Search Search for customers with mobile number or ID
	Search *string `form:"search,omitempty" json:"search,omitempty"`
}

// GetProductsParams defines parameters for GetProducts.
type GetProductsParams struct {
	// Group Fetch only products of that category
	Group *float32 `form:"group,omitempty" json:"group,omitempty"`

	// Page Page number
	Page *int `form:"page,omitempty" json:"page,omitempty"`
}

// PostCustomersJSONRequestBody defines body for PostCustomers for application/json ContentType.
type PostCustomersJSONRequestBody = Customer

// PostLoginJSONRequestBody defines body for PostLogin for application/json ContentType.
type PostLoginJSONRequestBody = User

// PostSalesInvoicesJSONRequestBody defines body for PostSalesInvoices for application/json ContentType.
type PostSalesInvoicesJSONRequestBody = SalesInvoice
